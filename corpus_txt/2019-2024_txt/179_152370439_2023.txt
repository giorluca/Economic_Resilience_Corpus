Integration of economic MPC and modifier adaptation in slow dynamic processes with structural model uncertainty

 1    PROGRAMA DE DOCTORADO EN  INGENIERÍA INDUSTRIAL    TESIS DOCTORAL:  INTEGRATION OF ECONOMIC MPC AND MODIFIER ADAPTATION IN SLOW DYNAMIC PROCESSES WITH STRUCTURAL MODEL UNCERTAINTY  Presentada por Erika Oliveira da Silva  para optar al grado de  Doctor/a por la Universidad de Valladolid   Dirigida por: D. César de Prada Moraga  D. Daniel Andrés Navia López 2                      3                 “I make a vow Right here and now I'm gonna spend my time this way” Why – Robert Larson   4                     5  This work was supported by the Regional Government of Castilla y León and the EU-FEDER (CLU 207-09, CL-EI-2021-07, UIC 233), as well as by project InCO4In, from Spanish AEI under project PGC2018-099312-B-C31, both with FEDER funds. It has also been supported by a pre-doctoral contract from the Consejería de Educación de la Junta de Castilla y León, Orden EDU/556/2019 under the title "Optimization in Industry 4.0". The author thanks the European Social Fund and the Consejería de Educación de la Junta de Castilla y León.                   6                          7  Agradecimentos  A mis directores de tesis, César de Prada y Daniel Navia, por todo el conocimiento que me han aportado y consejos. En especial a César, por confiar en mí y ofrecerme otra vez la oportunidad de hacer un doctorado en España después de tantos años. A los profesores del grupo de investigación “Control y supervisión de procesos” por la formación recibida y a los técnicos de laboratorio Teresa Álvarez y Graciano Garcia. A mis compañeros de trabajo: José Luis Pitarch, Carlos Palacín, María Marcos, Pablo Riquelme. En especial, quisiera agradecer a mi familia latina: Tomás García, Rogelio, Daniel Montes, Yuri, Felipe y Irina y mi familia vallisoletana: Cristian Pablos, Suní Rodriguez y Elena Rojo por todos los momentos “familia” que pasamos juntos.  A todos los compañeros del Departamento de Ingeniería Química. En especial a Priscila Scarcelli, Grazielle Rúas que estuvieron poco tiempo, pero se convirtieron en amigas para toda la vida.  A los ingenieros de Petronor Sergio, Rafael por el apoyo técnico al caso de estudio del splitter de propano-propileno. A Aline, Fabiana, Irina, Rafaella por la infinita amistad, soporte que me han dado y felices recuerdos. A Andrea, Lucile e Yosra, las mejores compañías de piso que una podría tener durante el periodo más incierto y duro del confinamiento.  A minhas amigas de “infância”: Karina Seal, Gabriela Valença, Flávia Miranda e mais recentes: Thais Lima, Sara Lima e família que me ajudaram e apoiaram minha vinda a Espanha e me ensinaram que família vai além de compartir laços sanguíneos. Aos meus pais, Erick e Maria Luiza, que sempre incentivaram a minha vontade de aprender.  Ao meu irmão, Erick, que sempre esteve ao meu lado, mesmo com a grande distancia física que nos separa.  A José y Palmira del bar Central Park que siempre me han recibido con una grande sonrisa y por las comidas riquísimas que me hicieran sentir como en casa.  8  A la música y a todos los amigos que hice a partir de ella, como María San Miguel y Galen Fraser que me recibieron con los brazos abiertos a su familia fiddle. En especial a María por inspirarme como músico y profesora y hacerme ver que la docencia siempre fue parte de mi vida y seguirá siendo. A las profesionales de salud Fernanda Ximenes, Lidia Sanz, Maria Luisa Rojo que me ayudaron a cuidar de mi cuerpo y mente y permitieron que yo terminara esta tesis antes que ella terminara conmigo.                      9  Summary  English The rise of digitalization and increasing competitiveness has increased the interest in process optimization in industry. Decisions in industry are usually based on the automation pyramid. The automation pyramid has different layers that cover the different decisions to be made for different time horizons. One of them is Real-Time Optimization, known by its acronym RTO. Traditional RTO uses a steady-state nonlinear model of the process to optimize a plant's economic objective subject to process constraints. This is the technology currently used in commercial RTO applications. However, no model is a perfect representation of reality, and structural and parametric model uncertainties make the optimum calculated by RTO do not match those of the actual process. One way to address this problem is to modify the optimization problem so that the Necessary Conditions of Optimality (NCO) of the problem match those of the actual plant. This strategy is known as Modifier Adaptation (MA) methodology.  The MA methodology requires the gradient values of the real plant and the model to calculate the modifiers. There are several ways to accurately estimate model gradients, but estimation of the real process gradients are more difficult. In addition, the need to use stationary data is a limitation of RTO with MA, especially for slow dynamic systems. Objectives This thesis focuses on ways to mitigate the weaknesses of RTO and MA unification that we consider most critical for its application in industry. To this end, it is proposed to couple the RTO and control layers with the concepts of the Modifier Adaptation (MA) methodology by estimating process gradients or directly the MA modifiers using transient data. It also aims to apply the developed algorithms in different simulation case study, in a laboratory plant and in an industrial case. Methodology To achieve the objective, the methodology followed consisted of studying the fundamentals of predictive control and MA, as well as the problems posed by the estimation of gradients using transient data. Optimization methods were used to estimate these gradients/modifiers.  10  In addition, different case studies were studied: Williams Otto Reactor, Hybrid Pilot Plant, and Propane-Propylene Fractionator. A first-principles dynamic model was developed for each case study. In the case of the propane-propylene fractionation unit, the model was also validated with real process data. In addition, data reconciliation was used to deal with the presence of unreliable measurements in the plant. Subsequently, an economic predictive control (eMPC) architecture integrated with MA is proposed to bring a process to its true optimal operating point. To accelerate the time to optimum, it is proposed to update the MA modifiers at the same frequency as the controller. For this purpose, the process gradients or directly the MA modifiers should be estimated using process transient data. Then, two proposals for estimating process gradients or modifiers, Dynamic Modifier Estimation (DME) and Transient MA (TMA), were studied. The DME algorithm aims to directly estimate the MA modifiers without the need to explicitly calculate the process and model gradients. The DME uses an optimization problem that attempts to minimize the difference between the modified cost function or constraints and the transient process measures using a moving horizon. The decision variables of the optimization problem are the dynamic modifiers that will match the static modifiers required by MA when the process reaches steady state. On the other hand, the TMA is based on previous work using a Taylor series expansion that relates the outputs, inputs, and gradients of the process to be estimated. The previous method was formulated for an RTO (Real Time Optimization) context and did not take into account dynamic effects, so only the dependence of past decision variables was considered. Therefore, optimization and control were applied to different time scales. In this thesis, the Taylor series has been extended to include the effect of time (the derivative over time). This derivative can be estimated by a polynomial approximation that requires past data using the Nordsieck vector. Once the time dependence is computed, recursive identification algorithms can be implemented to estimate an approximation of the dynamic derivatives of the process with respect to the decision variables. Results and conclusions Both DME and TMA algorithms were first applied to a simulation of the Williams-Otto reactor. The results with the DME algorithm showed that this new approach can  11  reach values quite close to the actual economic operating optimum, despite the parametric and structural mismatch between the model and the process. The TMA algorithm was also able to reach the process optimum in the Williams-Otto example with or without active constraints.  The TMA algorithm has also been applied in a hybrid laboratory plant that mimics the behavior of a CSTR with Van de Vusse reactions. The concept of hybrid plants is based on the fact that some process phenomena can be replaced by computations of measured variables and their effect on the process can be physically implemented, at least partially, by suitable actuators. The inclusion of the modifiers calculated with the TMA has significantly increased the process benefit for both experimental examples, reducing the suboptimality related to the process-model mismatch. Finally, the two proposed methods were applied in a virtual environment similar to the real process of a propane-propylene fractionator of a refinery located in northern Spain. For this case study, the TMA method was modified to improve its performance. The results presented show that both DME and TMA could improve the process performance during the transient period for some cases. However, the applicability of MA with transient data depends on the process under consideration.             12  Español  La expansión de la digitalización y la creciente competitividad aumentó el interés en la optimización de procesos en la industria. Las decisiones en la industria normalmente se basan en la pirámide de automatización. Sus diferentes capas abarcan las diferentes decisiones que se debe tomar para diferentes horizontes de tiempo. Una de ellas es la Optimización en Tiempo Real, conocida por la sigla en inglés RTO. El RTO tradicional usa un modelo no lineal estacionario del proceso para optimizar un objetivo económico de la planta frente a restricciones del proceso. Esta es la tecnología usada actualmente por las aplicaciones comerciales de RTO. Sin embargo, ningún modelo es una representación perfecta de la realidad y las incertidumbres estructurales y paramétricas de los modelos hacen que los óptimos calculados por la RTO no coincidan con los del proceso real. Una forma de abordar este problema es modificar el problema de optimización de modo que las condiciones necesarias de optimalidad del problema (NCO) se igualen a los de la planta real. Esa estrategia es conocida como la metodología de adaptación de modificadores (Modifier Adaptation, MA).  La metodología MA necesita de los valores de gradiente de la planta real y del modelo para el cálculo de los modificadores. Hay diversas formas de estimar los gradientes del modelo con exactitud, sin embargo, la estimación en proceso real es más difícil. Además, la necesidad de usar datos en estacionario sigue siendo una limitación fundamental de la RTO con MA, principalmente para sistemas dinámicos lentos. Objetivos Esta tesis se enfoca en formas de mitigar las debilidades de la unificación RTO y MA que consideramos las más críticas para su aplicación en la industria. Para eso se propone que las capas de RTO y control se unan con los conceptos de la metodología de adaptación de modificadores (Modifier Adaptation, MA) estimando los gradientes de proceso o directamente los modificadores de MA usando datos de transitorio. Además tiene como objetivo aplicar los algoritmos desarrollados en diferentes casos de estudio en simulación, en una planta de laboratorio y en un caso industrial.    13  Metodología Para alcanzar el objetivo, la metodología seguida consistió en estudiar los fundamentos de control predictivo y MA así como los problemas que presentaba la estimación de gradientes en transitorio. Se utilizaron métodos de optimización para estimar estos gradientes/modificadores. Además se estudiaron los distintos casos de estudio: Reactor Williams Otto, Planta Piloto Híbrida y fraccionadora de propano-propileno. Para cada caso de estudio, se desarrolló un modelo dinámico de primeros principios. En el caso de la fraccionadora de propano-propileno, el modelo también se validó con datos reales del proceso. Además, se recurrió a la reconciliación de datos para hacer frente a la presencia de mediciones poco fiables en la planta. En seguida, se propuso una arquitectura de un controlador predictivo económico (eMPC) integrado con MA de forma que permita a llevar un proceso a su punto de operación óptimo real. Con el objetivo de acelerar el tiempo al óptimo, se propone que los modificadores del MA se actualicen a la misma frecuencia del controlador. Para ello, los gradientes de proceso o directamente los modificadores del MA son estimados usando datos del transitorio del proceso.  Las dos propuestas presentadas para esa estimación son el Dynamic Modifier Estimation (DME) y Transient MA (TMA). El algoritmo de DME tiene como objetivo estimar directamente los modificadores de MA, sin necesidad de calcular explícitamente los gradientes del proceso y del modelo. El DME utiliza un problema de optimización que trata de minimizar la diferencia entre la función costo o restricciones modificadas con las medidas del proceso en transitorio usando un horizonte móvil. Las variables de decisión del problema de optimización son los modificadores dinámicos que coincidirán con los modificadores estáticos requeridos por MA cuando el proceso alcance el estado estacionario. Por otro lado, el TMA está basado en un trabajo antecedente donde se utiliza una expansión en serie de Taylor que relaciona las salidas, entradas y gradientes del proceso que se desea estimar. El método anterior fue formulado para un contexto RTO (Real Time Optimization) y no tenía en cuenta los efectos dinámicos, por lo que sólo se consideró la dependencia de las variables de decisión pasadas. Debido a ello, la optimización y el control se aplicaron a diferentes escalas de tiempo. En esta tesis, la serie de Taylor fue  14  expandida de forma que considera el efecto del tiempo (la derivada en el tiempo). Esta derivada se puede estimar mediante una aproximación polinómica que requiere datos pasados utilizando el vector de Nordsieck. Una vez calculada la dependencia temporal, se pueden implementar algoritmos de identificación recursiva para estimar una aproximación de las derivadas dinámicas del proceso con respecto a las variables de decisión. Resultados y conclusiones Ambos algoritmos fueron primeramente aplicados a una simulación del reactor de Williams-Otto. Los resultados con el algoritmo de DME, demostraron que este nuevo enfoque puede alcanzar valores bastante cercanos al punto óptimo de funcionamiento económico real a pesar del desajuste paramétrico y estructural entre el modelo y el proceso. El algoritmo TMA también ha sido capaz de alcanzar al óptimo de proceso en el ejemplo de Williams-Otto con o sin restricciones activas.  El algoritmo TMA también se ha aplicado en una planta de laboratorio híbrida que emula el comportamiento de un CSTR con las reacciones de Van de Vusse. El concepto de plantas híbridas se basa en que algunos fenómenos del proceso pueden ser reemplazados por cómputos de variables medidas y su efecto sobre el proceso puede ser implementado físicamente, al menos parcialmente, mediante actuadores adecuados. La inclusión de los modificadores calculados con el TMA ha aumentado significativamente el beneficio del proceso para ambos ejemplos experimentales, reduciendo la suboptimalidad relacionada con el desajuste proceso-modelo. Finalmente, las dos metodologías propuestas se aplicaron en un ambiente virtual similar al proceso real de una fraccionadora de propano-propileno de una refinería al norte de España. Para este estudio de caso, el método TMA fue modificado para mejorar su performance. Los resultados presentados muestran que tanto DME como TMA pueden mejorar la performance del proceso durante el periodo transitorio. La aplicabilidad del MA con datos transitorios depende del proceso considerado.      15  Contents 1 Introduction ....................................................................................................................... 17 1.1 Current State of Real-Time Optimization Applications in the Process Industry ........ 17 1.2 Direct Input Adaptation: Self-Optimizing control and Extremum seeking control .... 21 1.3 Modifier Adaptation .................................................................................................... 22 1.4 Dynamic RTO and eMPC ........................................................................................... 25 1.5 Using transient measurements for gradient estimation ............................................... 25 1.6 Unification RTO + MPC + MA .................................................................................. 26 1.7 Motivation ................................................................................................................... 27 1.8 Objectives .................................................................................................................... 27 1.9 Organization of the thesis ............................................................................................ 28 1.10 Contributions and publications .................................................................................... 29 2 Economic MPC with MA (eMPC+MA) .......................................................................... 31 2.1 Economic MPC with MA (eMPC+MA) ..................................................................... 32 2.2 Moving Horizon Estimation (MHE) ........................................................................... 34 2.3 MA modifiers estimation using transient measurements ............................................ 36 3 Dynamic Modifier Estimation (DME) ............................................................................. 39 3.1 DME algorithm ........................................................................................................... 39 3.2 Implementation in the Williams-Otto reactor case study ............................................ 45 3.2.1 Process Description ............................................................................................. 46 3.2.2 Rigorous dynamic model .................................................................................... 47 3.2.3 Simplified dynamic model .................................................................................. 48 3.2.4 Comparison between process and model optimum ............................................. 49 3.2.5 eMPC+MA + DME ............................................................................................. 51 3.2.6 Results ................................................................................................................. 52 3.2.7 Conclusions ......................................................................................................... 58 4 Transient MA (TMA)........................................................................................................ 59 4.1 TMA algorithm ........................................................................................................... 59 4.1.1 On-line predictions of 𝐳𝐳𝑝𝑝𝑘𝑘 .................................................................................. 59 4.1.2 Identification algorithm ....................................................................................... 63 4.2 Possible modification of TMA algorithm: TMAm ...................................................... 65 4.3 Implementation in the Williams-Otto reactor case study ............................................ 66 4.3.1 eMPC+MA+TMA ............................................................................................... 66 4.3.2 Conclusions ......................................................................................................... 72 5 Hybrid Laboratory Plant Case Study ............................................................................. 73 5.1 Description of the process ........................................................................................... 73  16  5.2 Results ......................................................................................................................... 80 5.2.1 Unconstrained Problem ....................................................................................... 80 5.2.2 Constrained Problem ........................................................................................... 84 5.3 Conclusions ................................................................................................................. 88 6 Industrial Case: Propylene-Propane Splitter ................................................................. 89 6.1 Process description ...................................................................................................... 90 6.1.1 Model Development ............................................................................................ 91 6.2 RTO Architecture Proposal ....................................................................................... 112 6.3 Components of the Virtual Plant Architecture .......................................................... 113 6.3.1 Virtual Process .................................................................................................. 114 6.3.2 Real Time Manager ........................................................................................... 114 6.3.3 Aspen DMC controller ...................................................................................... 116 6.3.4 Dynamic Real Time Optimization .................................................................... 122 6.3.5 Database InfluxDB ............................................................................................ 123 6.3.6 Connection between the parts and possible layouts of the Virtual Plant ........... 124 6.4 Results ....................................................................................................................... 128 6.4.1 Scenario 1 .......................................................................................................... 134 6.4.2 Scenario 2 .......................................................................................................... 137 6.4.3 Scenario 3 .......................................................................................................... 140 6.4.4 Scenario 4 .......................................................................................................... 145 6.5 Conclusions ............................................................................................................... 147 7 Final Conclusions and Future Work ............................................................................. 148 7.1 Final Conclusions ...................................................................................................... 148 7.2 Future work ............................................................................................................... 150 References ................................................................................................................................ 152           17  1 Introduction  1.1 Current State of Real-Time Optimization Applications in the Process Industry  The objective of process optimization is to make the right operational decisions that minimize production costs and maximize profits while fulfilling safety, environmental and quality constraints.  Typically, industrial decision-making is organized as shown in Figure 1.1. Each layer uses different timescales and models to achieve its objectives. The first layer is Enterprise Resource Planning (ERP) and is responsible for production planning over a long time horizon. Most refineries and large chemical plants use linear programming (LP) with an economic objective for decision making in this layer. The next level corresponds to the Manufacturing Execution Systems (MES), which are responsible for scheduling operations and deal with the assignment of products and tasks to appropriate equipment and timing over a period of days or hours. Real-Time Optimization (RTO) comes next, using real-time process measurements to calculate the optimal setpoints to be applied to the process (the solid line indicates this real-time communication, while the dashed lines in ERP and MES may not be automatic or real-time). Typically, a Model Predictive Control (MPC) layer and then a Distributed Control System (DCS) layer with the basic controller, actuators and sensors in the field are responsible for making the process achieve these setpoints.  Figure 1.1: Industry Decision Hierarchy (Darby et al., 2011)   18  In this thesis, special attention is given to the RTO and MPC layers. The RTO is a set of algorithms and techniques that automatically compute, using real-time data, an estimate of the optimum operating point of a process at steady state, taking into account economic criteria. Ideally, a perfect RTO layer would solve the problem (1.1), where 𝜙𝜙𝑝𝑝 is the process cost function to be minimized, 𝒖𝒖 are the decision variables between the lower and upper limits [𝒖𝒖𝐿𝐿 ,𝒖𝒖𝑈𝑈] , 𝒚𝒚𝑝𝑝  are process variables, 𝒈𝒈𝑝𝑝  a set of inequality constraints and 𝒇𝒇𝑝𝑝  the “real” process model in steady state. The subscript p indicates that the variable or function corresponds to the real process. min𝒖𝒖𝜙𝜙𝑝𝑝�𝒖𝒖,𝒚𝒚𝑝𝑝� 𝑠𝑠. 𝑡𝑡  𝒈𝒈𝑝𝑝�𝒖𝒖,𝒚𝒚𝑝𝑝� ≤ 0   𝒇𝒇𝑝𝑝�𝒖𝒖,𝒚𝒚𝑝𝑝� = 0 𝒖𝒖𝐿𝐿 ≤ 𝒖𝒖 ≤ 𝒖𝒖𝑈𝑈 (1.1)  Since the correct mapping between input and output 𝒇𝒇𝑝𝑝 is generally unknown, the RTO layer uses a rigorous nonlinear steady-state model 𝒇𝒇𝑚𝑚 that attempts to predict both 𝒇𝒇𝑝𝑝  and constraints 𝒈𝒈𝑝𝑝 , equation (1.2). Therefore, the performance of RTO is highly dependent on the accuracy of the model 𝒇𝒇𝑚𝑚, 𝒈𝒈𝑚𝑚, and on reliable measured data. A good RTO model should represent the process under a wide range of operating conditions, match the real process optimum, and not violate the constraints during optimization. In addition, the time to solve the RTO optimization problem must be less than the considered frequency of execution of the RTO (in traditional RTO, this would be the time to reach steady state), so there is a trade-off between model accuracy and computational complexity. min𝒖𝒖𝜙𝜙𝑚𝑚(𝒖𝒖,𝒚𝒚) 𝑠𝑠. 𝑡𝑡  𝒈𝒈𝑚𝑚(𝒖𝒖,𝒚𝒚) ≤ 𝟎𝟎   𝒇𝒇𝑚𝑚(𝒖𝒖,𝒚𝒚) = 0 𝒖𝒖𝐿𝐿 ≤ 𝒖𝒖 ≤ 𝒖𝒖𝑈𝑈 (1.2)  Equation (1.2) can be rewritten as equation (1.3) using 𝒇𝒇𝑚𝑚(𝒖𝒖,𝒚𝒚) to make the cost function and constraints dependent on the inputs 𝒖𝒖.   19  min𝒖𝒖𝜙𝜙(𝒖𝒖) 𝑠𝑠. 𝑡𝑡  𝒈𝒈(𝒖𝒖) ≤ 𝟎𝟎   𝒖𝒖𝐿𝐿 ≤ 𝒖𝒖 ≤ 𝒖𝒖𝑈𝑈 (1.3)  As it is well known, even a really good model does not exactly match the real process due to three factors: parametric uncertainty (model parameters are different from the process), structural mismatch (simplification of complex phenomena, omission of some dynamics in the model), and process disturbances (Marchetti et al., 2016).  An intuitive strategy to address the model-process mismatch is to perform a model-parameter adaptation, using process data to update the parameters of the nonlinear steady-state model before solving the economic optimization. This idea is also referred to as the two-step approach, and it is probably the only strategy applied in commercial RTO systems today (Câmara et al., 2016).   A commercial RTO application will have a structure similar to Figure 1.2. In practice, the measurements need to be pre-processed before they can be used in a steady-state optimization algorithm. The first thing to check is the variable range or variable rate change of the variables. Then another steps are performed and should take into account  (Bhat and Saraf, 2004): • Steady State Detection (SSD): detects when the steady state has been reached. SSD uses statistical methods to verify this. • Gross Error Detection (GED): this step verifies instrument failure, measurement bias, presence of leaks that can add errors to the measurements • Data Reconciliation (DR): this step aims to eliminate the random noise from the measurements so that they satisfy the material and energy balances. Then the parameters of the 𝒇𝒇𝑚𝑚 model are updated to best fit the online process data (model parameter update). • Optimization: subsequently, the optimization problem (1.3) is solved using the updated model.  20   Figure 1.2: Inside a RTO application.  The performance issues of the current commercial RTO applications have been previously reported by Câmara et al. (2016), D. Quelhas et al. (2013) and Darby et al. (2011).  One of the main challenges reported by the authors is the plant-model mismatch. Model uncertainty or mismatch is one of the main causes of suboptimal operating conditions, violation of constraints and the long period of time to achieve final process stabilization with no guarantee that the process will achieve an optimal operation (D. Quelhas et al., 2013). If the model is structurally correct, the online model parameter adaptation (the two-step approach) can converge to the plant optimum in one iteration (Chachuat et al., 2009).  However in case of structural mismatch between process and model, this strategy does not guarantee to find the process optimum when convergence is achieved (Chachuat et al., 2009; D. Quelhas et al., 2013; Yip and Marlin, 2004).  In order to minimize the problems related to the structural uncertainty of the model, other algorithms have been studied. These algorithms consider different ways of using process measurements to compensate for the mismatch problem, such as: Direct Input Adaptation (Self-Optimizing Control or Extremum seeking) and Modifier Adaptation (Chachuat et al., 2009). A brief description of these algorithms is given in the following sections. Besides structural mismatch, another challenge for current commercial RTO applications is that some industrial processes never reach steady state due to frequent disturbances, changing parameters and demand. In these processes, the frequency  21  execution of a traditional RTO could be very large, making the use of these applications questionable. In this case, the idea of considering the dynamics of the process should be useful and then Dynamic RTO or economic MPC (eMPC) have been proposed. They are also presented in the following sections.  1.2 Direct Input Adaptation: Self-Optimizing control and Extremum seeking control  Unlike the model-parameter adaptation algorithms presented in the two-step approach, the Direct Input Adaptation does not require the solution of successive optimization problems. The main objective of these algorithms is to use feedback control to maintain some variables related to optimal plant performance at their set points values.  Therefore, the challenge is to choose the right variables to control that will drive the plant to its optimal operation, since these variables change with the active set. Self-optimizing control and Extremum seeking control are examples of direct input adaptation algorithms (Chachuat et al., 2009). Self-optimizing control aims to track a constant setpoint, as a function of the process variables, that is close to the process optimum, considering an acceptable loss, defined as the difference between the actual value and the true optimum value (Skogestad, 2000). This set point can be a measurement, a linear combination of measurements, or the gradient of the economic cost function.  The idea is to find a self-optimizing variable that is a constrained optimum or a flat optimum, cases (a) and (b) in Figure 1.3, respectively. The case (c) in Figure 1.3 is difficult to solve because the cost function is sensitive to the value of the self-optimizing variable.  Figure 1.3: Problems in implementing self-optimizing control. (a) Constrained optimum, (b) Unconstrained flat optimum, and (c) Unconstrained sharp optimum (Skogestad, 2000).  22  Therefore, a good self-optimizing variable must satisfy these four requirements: a) Its optimum must be insensitive to the disturbances. b) It must be a variable that is easy to measure and control. c) Its value is sensitive to the manipulated variables. d) If there is more than one variable, they must not be closely correlated. Extremum seeking control aims to find and maintain the extremum value of a static map between input and cost function. In the classical approach, a slow periodic dither signal (sinusoidal wave) is superimposed on to the input signal, equation (1.4). 𝑢𝑢(𝑡𝑡) = 𝑢𝑢 + 𝑎𝑎 sin𝜔𝜔𝑡𝑡 (1.4) A slow frequency 𝜔𝜔 is used so that the plant map could be considered static. This requires three different time scales between the plant (fast), the sinusoidal perturbation (intermediate) and a convergence to the optimum (slow). This separation of time scales can result in very slow convergence for most chemical or biochemical processes (Krishnamoorthy and Skogestad, 2022).  1.3 Modifier Adaptation  In order to incorporate ability to deal with structural mismatch into the two-step approach, further developments have incorporated process gradient information into the calculation to satisfy the necessary conditions of optimality (NCO) of the plant and the model. Roberts (1979) proposed a modification of the two-step approach to account for the differences between the process and model gradients. This idea was later given the acronym ISOPE, Integrated System Optimization and Parameter Estimation (Roberts, 1995; Roberts and Williams, 1981).  During this period, several variations of the ISOPE algorithm were developed to overcome some limitations of the original algorithm. BrdyŚ et al. (1986) presented a proposal to handle an optimization problem with process constraints in the outputs.  Almost ten years later, Brdyś and Tatjewski (1994) included a dual control effect in the ISOPE framework to force the process to follow the optimum and to produce an output with sufficient excitation to compute the future control signals, including a constraint to guarantee the excitation needed to estimate the process gradients.  23  Then, almost twenty years later, Tatjewski (2002) concluded that adding a bias  correction (model shift) term, equation (1.5), to the output of the predicted model would sufficient to satisfy the output-matching condition, equation (1.6). Including the bias, the value of the model outputs matches the process value without the need to update the model parameters.   𝒚𝒚(𝒖𝒖𝑘𝑘,𝜽𝜽𝑘𝑘) = 𝒚𝒚𝑝𝑝(𝒖𝒖𝑘𝑘) (1.6)  Subsequently, Gao and Engell (2005) proposed a new name for the algorithm: iterative gradient-modification optimization, since the name ISOPE is no longer appropriate (the parameter estimation step is not necessary). The authors also defined new modifiers for the constraints and proposed an alternative to keep the process excitation to estimate good gradients without the dual constraint.  Finally, in 2009, Marchetti et al. (2009) formalized the Modifier Adaptation (MA) methodology. In the traditional MA (Marchetti et al., 2009), at the current steady state 𝑘𝑘,  additional terms involving past inputs 𝒖𝒖𝑘𝑘−1∗  and modifiers 𝝀𝝀 , 𝜸𝜸 , 𝜀𝜀   are added to the original optimization problem in (1.2), formulating the modified problem as problem (1.7).  min𝒖𝒖𝜙𝜙𝑀𝑀: = 𝜙𝜙(𝒖𝒖)+𝝀𝝀𝑘𝑘𝑇𝑇(𝒖𝒖 − 𝒖𝒖𝑘𝑘−1∗ ) 𝑠𝑠. 𝑡𝑡   𝑔𝑔𝑀𝑀,𝑖𝑖(𝒖𝒖): = 𝑔𝑔𝑖𝑖(𝒖𝒖) + 𝜸𝜸𝑘𝑘,𝑖𝑖𝑇𝑇 (𝒖𝒖 − 𝒖𝒖𝑘𝑘−1∗ ) + 𝜀𝜀𝑘𝑘𝑖𝑖 ≤ 0 , 𝑖𝑖 = 1, … , 𝑛𝑛𝑔𝑔 𝒖𝒖𝑳𝑳 ≤ 𝒖𝒖 ≤ 𝒖𝒖𝑼𝑼 (1.7)  The variables 𝜙𝜙𝑀𝑀  and 𝑔𝑔𝑀𝑀,𝑖𝑖  are the modified cost function and constraints respectively, 𝒖𝒖𝑘𝑘−1∗  are the actual values of the manipulated variables calculated and applied to the process in the previous steady state. 𝑛𝑛𝑔𝑔  is the number of nonlinear constraints. The modifiers are given by equations (1.8)-(1.10).  𝝀𝝀𝑘𝑘𝑇𝑇 =𝜕𝜕𝜙𝜙𝑝𝑝𝜕𝜕𝒖𝒖�𝒖𝒖𝑘𝑘−1∗−𝜕𝜕𝜙𝜙𝜕𝜕𝒖𝒖�𝒖𝒖𝑘𝑘−1∗ (1.8) 𝒂𝒂𝑘𝑘: = 𝒚𝒚𝑝𝑝(𝒖𝒖𝑘𝑘) − 𝒚𝒚(𝒖𝒖𝑘𝑘,𝜽𝜽𝑘𝑘) (1.5)  24  𝜸𝜸𝑘𝑘𝑇𝑇𝑖𝑖 =𝜕𝜕𝑔𝑔𝑝𝑝𝑖𝑖𝜕𝜕𝒖𝒖�𝒖𝒖𝑘𝑘−1∗−𝜕𝜕𝑔𝑔𝑖𝑖𝜕𝜕𝒖𝒖�𝒖𝒖𝑘𝑘−1∗ (1.9) 𝜀𝜀𝑘𝑘𝑖𝑖 = 𝑔𝑔𝑝𝑝𝑖𝑖(𝒖𝒖𝑘𝑘−1∗ ) − 𝑔𝑔𝑖𝑖(𝒖𝒖𝑘𝑘−1∗ ) , 𝑖𝑖 = 1, … , 𝑛𝑛𝑔𝑔  (1.10)  𝝀𝝀𝑘𝑘𝑇𝑇 and 𝜸𝜸𝑘𝑘𝑇𝑇 are the first-order modifiers and correct the curvature of the model, and 𝜀𝜀𝑘𝑘𝑖𝑖  is the zero-order modifier and corrects the offset for each constraint, see Figure 1.4.   Figure 1.4: First order modification in the constraints (figure from Marchetti et al. (2016))  The total number of modifiers required depends on the number of constraints, 𝑛𝑛𝑔𝑔, and the number of inputs, 𝑛𝑛𝑢𝑢 as shown in equation (1.11). 𝑛𝑛𝑚𝑚𝑚𝑚𝑚𝑚 =  𝑛𝑛𝑔𝑔 + 𝑛𝑛𝑢𝑢�𝑛𝑛𝑔𝑔 + 1� (1.11)  Problem (1.7) is solved iteratively by calculating the values of 𝒖𝒖𝑘𝑘∗  that are applied to the process. When the next steady state is reached, the newly measured process outputs are used to update the modifiers. In general, to avoid excessive correction, the strategy used is to filter these modifiers before using the original values in the optimization problem, equation (1.12) where 𝐾𝐾 = diag�𝐾𝐾1, … ,𝐾𝐾𝑛𝑛𝑢𝑢�, 𝐾𝐾𝑖𝑖  ∈ (0,1]. 𝝀𝝀𝑘𝑘 = �𝐼𝐼 − 𝐾𝐾𝝀𝝀�𝝀𝝀𝑘𝑘−1𝑇𝑇 + 𝐾𝐾𝝀𝝀 �𝜕𝜕𝜙𝜙𝑝𝑝𝜕𝜕𝒖𝒖�𝒖𝒖𝑘𝑘−1∗−𝜕𝜕𝜙𝜙𝜕𝜕𝒖𝒖�𝒖𝒖𝑘𝑘−1∗� 𝜸𝜸𝑘𝑘 = (𝐼𝐼 − 𝐾𝐾𝜸𝜸)𝜸𝜸𝑘𝑘−1𝑇𝑇 + 𝐾𝐾𝜸𝜸 �𝜕𝜕𝒈𝒈𝑝𝑝𝜕𝜕𝒖𝒖�𝒖𝒖𝑘𝑘−1∗−𝜕𝜕𝒈𝒈𝜕𝜕𝒖𝒖�𝒖𝒖𝑘𝑘−1∗� (1.12)  25  𝜺𝜺𝑘𝑘 = (𝐼𝐼 − 𝐾𝐾𝜺𝜺)𝜺𝜺𝑘𝑘−1𝑇𝑇 + 𝐾𝐾𝜺𝜺 �𝒈𝒈𝑝𝑝(𝒖𝒖𝑘𝑘−1∗ ) − 𝒈𝒈(𝒖𝒖𝑘𝑘−1∗ )�  When the MA modifiers are computed correctly, the RTO problem reaches the process optimum by convergence, regardless of the quality of the model. However, the model must at least satisfy a model adequacy requirement: the reduced Hessian of the Lagrangian in the real optimum must be positive definite (François and Bonvin, 2013). Other equivalent formulations are possible, for example, in the output MA or MAy approach, the modifiers are used directly in the predicted output, instead of adding an additional term to the cost function (Papasavvas et al., 2019).  1.4 Dynamic RTO and eMPC  Many industrial processes with frequent grade changes would benefit from the use of dynamic information in the optimization layer. This dynamic information could be included in the RTO layer by replacing the steady-state optimization problem with a dynamic optimization problem as in a DRTO (dynamic RTO). The other option is to consider an economic optimization layer within the MPC (an economic MPC, eMPC). Both DRTO and eMPC use the economic information in the objective function and a dynamic model as a constraint in the optimization problem. The main difference is that DRTO is used in the same hierarchical structure of RTO and calculates the setpoints to a control layer, and eMPC calculates the control trajectory to achieve the economic objective function (Ellis et al., 2014).  1.5 Using transient measurements for gradient estimation  Mansour and Ellis (2003) present several algorithms for estimating process gradients using steady state and transient data. The advantage of using transient data is to avoid the waiting time for steady state. The idea is to identify a linear or nonlinear dynamic model online using the process measurements and then calculate the steady-state gradient from this model.  26  Others alternatives to using transient measurements in steady-state optimization have been studied. François and Bonvin (2014) presented an estimation of the gradients using Neighboring Extremals (NE). The method estimates the gradient based on a variational analysis around the nominal operating point for the nominal parameter values where the gradient is zero (unconstrained problem). However the method is not valid in the case of structural mismatch. Afterward, Rodríguez-Blanco et al. (2017) developed a method that uses a truncated Taylor expansion of the process cost combined with identification algorithms to estimate process gradients. This second method is able to estimate gradients in the presence of parameter or structural mismatch.  1.6 Unification RTO + MPC + MA   The mismatch between the RTO+MA and MPC models can lead to a poor economic performance if the setpoint calculated in the upper layer is unreachable by the controller layer. A logical way to solve this problem is to integrate these two layers. Recent works have presented different formulations of the RTO+MA+MPC problem. Vaccari and Pannocchia (2017) used the so-called economic MPC (eMPC), where the optimization problem has an economic objective function. Their contribution includes the modifiers from the MA methodology to achieve the NCO of the process despite the plant-model mismatch. The implementation has two layers: the first is a steady-state economic objective problem and the second is a dynamic optimization problem. The eMPC is applied to an example of a continuous stirred tank reactor using a state space model in the controller with a parameter mismatch. In this example, the steady state gradient of the process is assumed to be known for the calculation of the MA modifiers. Subsequently, Pannocchia (2018) and Vaccari and Pannocchia (2018) extended their previous work by estimating the process gradients from a local linear input-output model obtained from online data and identification algorithms. To guarantee the necessary excitation, a random signal was included for a period of time, which increased the convergence time of the algorithm. Then, Hernández and Engell (2019) presented an alternative formulation for economic control based on MA, where the corrections are made in the nominal dynamic plant model instead of the objective function. They identified linear dynamic models to approximate the true plant map, and then computed the plant gradients. Since the  27  estimated linearized model is only valid in the neighborhood of the current state, the sequence of optimal control moves is limited to this region.   Faulwasser and Pannocchia (2019) used the output modifier adaptation (MAy) and the eMPC from their previous work without the terminal constraint. The authors emphasized the importance of estimating correct plant gradients. In this work, the gradients were assumed to be known. After, Vaccari et al. (2020) presented a technique for direct estimation of the modifiers using steady-state perturbations and a Broyden update algorithm. Subsequently, Vaccari et al. (2021) presented an extension of Vaccari et al. (2020) to compare two techniques for estimating either plant gradients or modifiers using steady-state measurements via Broyden’s update and linear regression. The eMPC schemes were tested in simulation on two benchmark examples, highlighting the fact that the use of transient measurements to estimate the process gradients can be an interesting approach to speed up convergence. As can be seen from the aforementioned papers, the investigation of how to correctly estimate the process gradients/modifiers to be used in a framework for RTO+MA+MPC is an open issue.   1.7 Motivation  Although MA is a powerful methodology that guarantees the true optimum of a process despite the use of incorrect models, the industrial application of MA is almost non-existent (Marchetti et al., 2016). One of the reasons for this is that many industrial processes never reach a steady state due to frequent disturbances or slow dynamics, so there are not enough steady-state data for the gradient estimation step. The motivation of this thesis, therefore, is to develop, from the idea of the traditional MA, a new methodology that could be easily applied in an industrial process. This new methodology will consider the unification of RTO and MPC layers with MA and will use new algorithms to estimate the process gradients using transient measurements. 1.8 Objectives    The general objective of this thesis is to study strategies to make RTO with MA applicable in slow dynamic processes. This thesis proposes the unification of the RTO  28  and control layers and the use of transient data to estimate the steady-state gradients required by MA. Moreover, the proposed tools are applied to a simulation case, an experimental laboratory plant, and then to a real industrial process.  Along this line, in order to achieve the main objective, the following specific objectives are proposed: • Study the Modifier Adaptation Methodology • Study Aspen DMC  • Identify the main challenges of the Modifier Adaptation methodology to be applied in slow process. • Propose a unification of the Real-Time Optimization layer, the MPC layer and Modifier Adaptation • Propose new methods to estimate MA modifiers using transient measurements that can be performed with the same sampling time of the MPC, with the aim of reducing the convergence time of the method in processes with slow dynamics.  • Application of the proposed solutions in a simulation case • Application of the proposed solutions in a laboratory plant • Application of the proposed solutions in an industrial case  1.9 Organization of the thesis   The thesis is divided into 7 chapters as follows: Chapter 2 presents a proposal of RTO, MPC and MA unification. Chapter 3 presents the first proposed algorithm that directly estimates the MA modifiers, the Dynamic Modifier Estimation algorithm. This chapter shows the application of the method in the Williams-Otto reactor case study. Chapter 4 presents the second proposed algorithm that is able to improve the performance of the RTO using an identification algorithm and transient measurements, the TMA. This method is applied in simulation in the Williams-Otto reactor case study. Chapter 5 presents the results of the TMA algorithm applied to a laboratory plant. The plant consists of a hybrid reactor based on the Van der Vusse reactions.  29  Chapter 6 presents the application of the DME and a modification of the TMA algorithms applied to an industrial case: a propane-propylene splitter. Chapter 7 presents the conclusions.  1.10 Contributions and publications  Journal contributions: Oliveira-Silva, E., de Prada, C., Navia, D., 2021. Dynamic optimization integrating modifier adaptation using transient measurements. Comput. Chem. Eng. 149, 107282. https://doi.org/10.1016/j.compchemeng.2021.107282  Oliveira-Silva, E., de Prada, C., Montes, D., Navia, D., 2023. Economic MPC with Modifier Adaptation using Transient Measurements. Comput. Chem. Eng. 108205. https://doi.org/10.1016/j.compchemeng.2023.108205 Book chapters: Oliveira-Silva, E., de Prada, C., Navia, D., 2021. Economic MPC with Modifier Adaptation using Transient Measurements, in: Computer Aided Chemical Engineering. Elsevier Masson SAS, pp. 1253–1258. https://doi.org/10.1016/B978-0-323-88506-5.50193-5 Congress contributions: Silva, E. O. da, Rodríguez-Blanco, T., and Prada, C. de, “Aplicación de la metodología de adaptación de modificadores con datos de transitorio para RTO de una columna fraccionadora de propano-propileno,” XXXIX Jornadas de Automática, Badajoz, 2018. Oliveira-Silva, E., de Prada, C., "Methodology to achieve convergence in a rigorous dynamic model of a superfractionator", X Congress of Eurosim, Logroño, La Rioja, 2019. Oliveira-Silva, E., de Prada, C., Navia, D. Economic MPC with Modifier Adaptation using Transient Measurements, ESCAPE-31, Istanbul 2021. Oliveira-Silva, E., de Prada, C., Navia, D., 2022. Simulation platform of an industrial propylene-propane splitter integrated to Advanced Process Control for Real  30  Time Optimization experiments. IFAC-PapersOnLine 55, 673–678. https://doi.org/10.1016/j.ifacol.2022.07.521 Montes, D., Zamarreño, J.M., Pitarch, J.L., Oliveira da Silva, E., Prada, C. De, 2021. Implementación de capas superiores de la pirámide de automatización en una planta piloto híbrida, in: XLII JORNADAS DE AUTOMÁTICA : LIBRO DE ACTAS. Servizo de Publicacións da UDC, pp. 403–410. https://doi.org/10.17979/spudc.9788497498043.403                      31  2 Economic MPC with MA (eMPC+MA)  This chapter presents a unification of RTO, MPC, and MA architecture that is simple enough to be applied to real processes. The proposed architecture is shown in Figure 2.1. It is composed of three modules: a module integrating RTO, MPC and MA, which performs the core task, i.e., an economic MPC (eMPC) with MA, a Moving Horizon Estimator (MHE) for estimating states and disturbances, and a third one for computing the values of the MA modifiers. This scheme is executed at regular time intervals denoted by the sub-index 𝑘𝑘.  Figure 2.1: Architecture of eMPC+MA.  At each iteration 𝑘𝑘, which coincides with the sampling time of all modules, the values of the manipulated variables applied to the process in the past interval 𝒖𝒖𝑘𝑘−1 and the current process measurements 𝒚𝒚𝑘𝑘  are collected and sent to the MHE module to estimate the current model states 𝒙𝒙�𝑘𝑘 and disturbances 𝒗𝒗𝑘𝑘. The solution given by the MHE module (𝒙𝒙�𝑘𝑘 and 𝒗𝒗𝑘𝑘∗ ), is used by the MA modifiers estimation module with current values of the process economic cost function 𝜙𝜙𝑝𝑝,𝑘𝑘 and constraints 𝒈𝒈𝑝𝑝,𝑘𝑘, to estimate online the values of the cost and constraints modifiers λ𝑘𝑘 , 𝛄𝛄𝑘𝑘  and ε𝑘𝑘 , after filtering. Next, the modifiers are used in the eMPC+MA to compute new control actions over a given horizon. Then, the first control action of the horizon, corresponding to the current time 𝒖𝒖𝑘𝑘 , is applied to the process at time 𝑘𝑘 . Finally, at the next sample time, the whole procedure is repeated, following a moving horizon policy, as in MPC. All of the three modules presented here are described in the following sections.   32  2.1 Economic MPC with MA (eMPC+MA)  This module incorporates an economic target and the modifiers from the MA methodology into a dynamic optimization problem, searching for the control moves ∆𝒖𝒖𝑘𝑘+𝑖𝑖 𝑖𝑖 = 0,1,2, … ,𝑛𝑛𝑢𝑢 − 1,  that minimize the cost function (2.1) subject to constraints (2.2) to (2.8). Note that the problem is formulated in the continuous time domain (𝑡𝑡). The cost function (2.1) considered is in steady state, so its value is calculated at the end of the prediction horizon, 𝜙𝜙�𝑡𝑡𝑝𝑝𝑝𝑝𝑝𝑝𝑚𝑚�,  and  using the value of the manipulated variable, in steady state, 𝒖𝒖�  in MA terms. The process is represented by a continuous dynamic model (2.2) and (2.3), which is assumed to be continuously differentiable. In problem (2.1)-(2.9), 𝒙𝒙 𝜖𝜖 ℝ𝑛𝑛𝑥𝑥  represent the states, 𝒖𝒖 𝜖𝜖 ℝ𝑛𝑛𝑢𝑢  the control actions, 𝒚𝒚 𝜖𝜖 ℝ𝑛𝑛𝑦𝑦  the measured outputs, 𝒙𝒙 �𝜖𝜖 ℝ𝑛𝑛𝑥𝑥  and 𝒗𝒗𝑘𝑘 𝜖𝜖 ℝ𝑛𝑛𝑣𝑣  are the actual states and disturbances, estimated by the MHE module (section 2.2). Since the model is formulated in continuous time, 𝒙𝒙, 𝒖𝒖 and 𝒚𝒚 are functions of 𝑡𝑡, but for simplicity this dependence has been omitted throughout the document unless necessary (e.g. (2.7)). Using a control vector parameterization approach, the control actions are only allowed to change at regular time intervals ∆𝑡𝑡 = 𝑡𝑡𝑘𝑘 − 𝑡𝑡𝑘𝑘−1. Denoting 𝑘𝑘 the current sampling time, the control actions 𝒖𝒖𝑘𝑘 𝜖𝜖 ℝ𝑛𝑛𝑢𝑢, computed and applied at time 𝑡𝑡𝑘𝑘, are kept constant within each time interval [𝑡𝑡𝑘𝑘, 𝑡𝑡𝑘𝑘+1), as in (2.7). The current and future control moves, denoted as ∆𝒖𝒖𝑘𝑘+𝑖𝑖, 𝑖𝑖 = 0,1,2, … ,𝑛𝑛𝑢𝑢 − 1 defined in (2.6), are the decision variables of problem (2.1)-(2.9). The selection of the control horizon 𝑛𝑛𝑢𝑢 and other tuning parameters follows the usual rules of MPC (Shah and Engell, 2011).  The model allows to compute predictions of the cost function and constraints over a future horizon from 𝑡𝑡𝑘𝑘 to the final prediction horizon  𝑡𝑡𝑝𝑝𝑝𝑝𝑝𝑝𝑚𝑚, long enough for the model to reach steady state. 𝑛𝑛𝑝𝑝𝑝𝑝𝑝𝑝𝑚𝑚 refers to the number of time instants from 𝑡𝑡𝑘𝑘 to reach 𝑡𝑡𝑝𝑝𝑝𝑝𝑝𝑝𝑚𝑚. The control moves are computed every sampling time from the current time 𝑡𝑡𝑘𝑘 to a control horizon 𝑡𝑡𝑘𝑘+𝑛𝑛𝑢𝑢 , after which, ∆𝒖𝒖𝑘𝑘+𝑖𝑖 = 0, but only the first control move ∆𝒖𝒖𝑘𝑘 is applied to the process.       33   The cost function (2.1) consists of three terms:  1. The first term, 𝜙𝜙�𝑡𝑡𝑝𝑝𝑝𝑝𝑝𝑝𝑚𝑚�, corresponds to an economic objective computed with the value of the model variables and control actions at the end of the prediction horizon 𝑡𝑡𝑝𝑝𝑝𝑝𝑝𝑝𝑚𝑚 , where the variables are expected to reach steady state. The objective is to achieve and maintain the process operating steadily at the real process optimum. Examples of economic objectives can be: maximizing benefits or production, or minimizing costs or energy. We assume that the value of 𝜙𝜙𝑝𝑝,𝑘𝑘 at any time instant 𝑘𝑘 can be computed from process measurements and control actions.  2. The second one, 𝝀𝝀𝑘𝑘𝑇𝑇(𝒖𝒖� − 𝒖𝒖𝑘𝑘−1) , is an additional MA-type term responsible for modifying the economic cost function 𝜙𝜙 to match the NCO of the real plant in steady state. Here  𝒖𝒖� = 𝒖𝒖𝑘𝑘−1 + ∑ ∆𝒖𝒖𝑘𝑘+𝑖𝑖𝑛𝑛𝑢𝑢−1𝑖𝑖=0  is the final value of the control actions. Note that this term is equivalent to the term added to the cost function in the traditional MA formulation. The modifier λ𝑘𝑘 is computed at each sampling time 𝑘𝑘 by the external module DME and is held constant as 𝛄𝛄𝑘𝑘 and ε𝑘𝑘 in problem (2.1)-(2.9).  3. Finally, the third term, ∑ ∆𝒖𝒖𝑘𝑘+𝑖𝑖𝑇𝑇𝑛𝑛𝑢𝑢−1𝑖𝑖=0 𝑸𝑸𝑢𝑢∆𝒖𝒖𝑘𝑘+𝑖𝑖 penalizes changes in the manipulated variables, which increases stability and contributes to model adequacy and convexification (François and Bonvin, 2013). 𝑸𝑸𝑢𝑢 is a positive definite matrix, with weighting factors on the control moves ∆𝒖𝒖, which can be considered as tuning factors for normalization and stabilization, as in the current practice of MPC.  min∆𝒖𝒖𝑘𝑘+𝑖𝑖𝑖𝑖=0,1,…𝑛𝑛𝑢𝑢−1𝜙𝜙�𝑡𝑡𝑝𝑝𝑝𝑝𝑝𝑝𝑚𝑚� + λ𝑘𝑘𝑻𝑻(𝒖𝒖� − 𝒖𝒖𝑘𝑘−1) + � ∆𝒖𝒖𝑘𝑘+𝑖𝑖𝑇𝑇𝑛𝑛𝑢𝑢−1𝑖𝑖=0𝑸𝑸𝑢𝑢∆𝒖𝒖𝑘𝑘+𝑖𝑖  (2.1) 𝑠𝑠. 𝑡𝑡.     𝒇𝒇(?̇?𝒙,𝒙𝒙,𝒖𝒖,𝒗𝒗𝑘𝑘) = 𝟎𝟎,  ∀𝑡𝑡 ∈ �𝑡𝑡𝑘𝑘, 𝑡𝑡𝑝𝑝𝑝𝑝𝑝𝑝𝑚𝑚� 𝒉𝒉(𝒙𝒙,𝒖𝒖,𝒚𝒚,𝒗𝒗𝑘𝑘) = 𝟎𝟎, ∀𝑡𝑡 ∈ �𝑡𝑡𝑘𝑘, 𝑡𝑡𝑝𝑝𝑝𝑝𝑝𝑝𝑚𝑚� (2.2) (2.3) 𝒈𝒈(𝒖𝒖) + 𝛄𝛄𝑘𝑘𝑇𝑇(𝒖𝒖� − 𝒖𝒖𝑘𝑘−1) + ε𝑘𝑘 ≤ 𝟎𝟎,  ∀𝑡𝑡 ∈ �𝑡𝑡𝑘𝑘, 𝑡𝑡𝑝𝑝𝑝𝑝𝑝𝑝𝑚𝑚� (2.4)                𝒖𝒖𝑳𝑳 ≤ 𝒖𝒖𝑘𝑘+𝑖𝑖 ≤ 𝒖𝒖𝑼𝑼, 𝑖𝑖 = 0,1, …𝑛𝑛𝑝𝑝𝑝𝑝𝑝𝑝𝑚𝑚 − 1 (2.5)  𝒖𝒖𝑘𝑘+𝑖𝑖 = 𝒖𝒖𝑘𝑘+𝑖𝑖−1 + ∆𝒖𝒖𝑘𝑘+𝑖𝑖, 𝑖𝑖 = 0,1, …𝑛𝑛𝑝𝑝𝑝𝑝𝑝𝑝𝑚𝑚 − 1 (2.6)  𝒖𝒖(𝑡𝑡) = 𝒖𝒖𝑘𝑘+𝑖𝑖 , 𝑡𝑡 ∈ [𝑡𝑡𝑘𝑘+𝑖𝑖, 𝑡𝑡𝑘𝑘+𝑖𝑖+1], 𝑖𝑖 = 0,1, …𝑛𝑛𝑝𝑝𝑝𝑝𝑝𝑝𝑚𝑚 − 1 (2.7)  ∆𝒖𝒖𝑘𝑘+𝑖𝑖 = 0 ,   𝑖𝑖 = 𝑛𝑛𝑢𝑢, …𝑛𝑛𝑝𝑝𝑝𝑝𝑝𝑝𝑚𝑚 − 1 (2.8)  𝒙𝒙(𝑡𝑡𝑘𝑘) = 𝒙𝒙�𝑘𝑘 (2.9)  34  The cost function is subjected to the model (2.2), (2.3), and the inequality constraints (2.4) and (2.5). In (2.4), 𝒈𝒈(𝒖𝒖)  are computed using (2.2) and (2.3), the constraint modifiers 𝜸𝜸𝑘𝑘 and ε𝑘𝑘 are calculated in the MA modifiers estimation module, and are kept constant at each iteration 𝑘𝑘. To solve (2.1)-(2.9), at each sampling time 𝑘𝑘, the initial value of the model states 𝒙𝒙(𝑡𝑡𝑘𝑘) and the disturbances are initialized to the value 𝒙𝒙�𝑘𝑘 and 𝒗𝒗𝑘𝑘 respectively (2.9), values estimated by the MHE module. The eMPC+MA presented in (2.1)-(2.9) was proposed considering the standard formulation (1.7) of MA, but other alternative and equivalent formulations are possible if the output MA (MAy) (Papasavvas et al., 2019) approach is chosen. In this case, the modifiers are used directly in the predicted output, instead of adding an extra term to the cost function. Similarly, the dynamic optimization problem could had been formulated as a two-step problem, as in (Vaccari et al., 2020), where a static optimization is first performed to compute optimal steady-state objectives, and then the results are used as terminal constraints in a horizon optimal control problem (FHOCP). Nevertheless, in the formulation of Vaccari et al. (2020), it may happen that the targets computed by the objective optimization problem are not achievable by the FHOCP because path constraints are not considered in the computation of the optimal targets. This problem can be mitigated by the proposed formulation (2.1)-(2.9), where the search takes place only within the feasible region.  2.2 Moving Horizon Estimation (MHE)  To provide offset-free behavior for the eMPC+MA problem (2.1)-(2.9), as well as to compute the initial values of states and disturbances, an augmented state estimator can be employed. Extended Kalman Filter (EKF) or Moving Horizon Estimation (MHE) are two well-known methods for this task, and either of them could be used in our scheme. Nevertheless, MHE was chosen because it fits better into the optimization framework, allows estimation of specific disturbances affecting the nonlinear model, and includes constraints in the formulation when necessary (Huang et al., 2010; Rawlings et al., 2019; Vaccari and Pannocchia, 2018). The MHE uses past information from measurements and control actions to estimate the values of the states and disturbances 𝒗𝒗, solving the dynamic optimization problem (2.10)-(2.17).   35   min𝒙𝒙𝑘𝑘−𝑛𝑛𝑛𝑛𝒗𝒗𝑘𝑘−𝑖𝑖𝑖𝑖=1,…,𝑛𝑛𝑛𝑛 � ∆𝒚𝒚𝑘𝑘−𝑖𝑖𝑇𝑇𝑛𝑛𝑛𝑛−1𝑖𝑖=0𝑸𝑸𝑦𝑦∆𝒚𝒚𝑘𝑘−𝑖𝑖 +  ∆𝒙𝒙𝑘𝑘−𝑛𝑛𝑛𝑛𝑇𝑇 𝑸𝑸𝑥𝑥∆𝒙𝒙𝑘𝑘−𝑛𝑛𝑛𝑛 +�𝒗𝒗𝑘𝑘−𝑖𝑖𝑇𝑇𝑛𝑛𝑛𝑛𝑖𝑖=1𝑸𝑸𝑣𝑣𝒗𝒗𝑘𝑘−𝑖𝑖  (2.10) 𝑠𝑠. 𝑡𝑡.         𝒇𝒇(?̇?𝒙,𝒙𝒙,𝒖𝒖,𝒗𝒗) = 𝟎𝟎, ∀𝑡𝑡 ∈ �𝑡𝑡𝑘𝑘−𝑛𝑛𝑛𝑛 , 𝑡𝑡𝑘𝑘� , 𝒙𝒙�𝑡𝑡𝑘𝑘−𝑛𝑛𝑛𝑛� = 𝒙𝒙𝑘𝑘−𝑛𝑛𝑛𝑛 (2.11) 𝒉𝒉(𝒙𝒙,𝒖𝒖,𝒚𝒚,𝒗𝒗) = 𝟎𝟎,  ∀𝑡𝑡 ∈ �𝑡𝑡𝑘𝑘−𝑛𝑛𝑛𝑛 , 𝑡𝑡𝑘𝑘� (2.12)     𝒈𝒈(𝒖𝒖,𝒚𝒚) ≤ 𝟎𝟎,  ∀𝑡𝑡 ∈ �𝑡𝑡𝑘𝑘−𝑛𝑛𝑛𝑛 , 𝑡𝑡𝑘𝑘� (2.13) 𝒖𝒖(𝒕𝒕) = 𝒖𝒖𝒌𝒌−𝒊𝒊, 𝒗𝒗(𝒕𝒕) = 𝒗𝒗𝑘𝑘−𝑖𝑖, 𝑡𝑡 ∈ [𝑡𝑡𝑘𝑘−𝑖𝑖, 𝑡𝑡𝑘𝑘−𝑖𝑖+1], 𝑖𝑖 = 1, … ,𝑛𝑛𝑝𝑝 (2.14) 𝒗𝒗𝑳𝑳 ≤ 𝒗𝒗𝑘𝑘−𝑖𝑖 ≤ 𝒗𝒗𝑼𝑼, 𝑖𝑖 = 1 …𝑛𝑛𝑝𝑝 (2.15) Δ𝒚𝒚𝑘𝑘−𝑖𝑖 = 𝒚𝒚𝑘𝑘−𝑖𝑖 − 𝒚𝒚𝑃𝑃,𝑘𝑘−𝑖𝑖, 𝑖𝑖 = 0, … ,𝑛𝑛𝑝𝑝 − 1 (2.16) Δ𝒙𝒙𝑘𝑘−𝑛𝑛𝑛𝑛 = 𝒙𝒙𝑘𝑘−𝑛𝑛𝑛𝑛 − 𝒙𝒙�𝑘𝑘−𝑛𝑛𝑛𝑛 (2.17)  Problem (2.10)-(2.17), has also been formulated in continuous time, and it is executed at each sampling time 𝑘𝑘, using the same nonlinear model (2.11), (2.12) of the eMPC+MA problem, considering a past horizon 𝑡𝑡 ∈ �𝑡𝑡𝑘𝑘−𝑛𝑛𝑛𝑛 , 𝑡𝑡𝑘𝑘�. In this past horizon, the control variables 𝒖𝒖𝑘𝑘−𝑖𝑖  applied to the process in [𝑡𝑡𝑘𝑘−𝑖𝑖, 𝑡𝑡𝑘𝑘−𝑖𝑖+1] , and the process measurements collected in 𝑡𝑡𝑘𝑘−𝑖𝑖, i.e., 𝒚𝒚𝑃𝑃,𝑘𝑘−𝑖𝑖, are known. The past horizon of the MHE is illustrated in Figure 2.2.  Figure 2.2: Past values for the MHE estimation.  Note that the decision variables of the MHE problem are the values of the states at time 𝑡𝑡𝑘𝑘−𝑛𝑛𝑛𝑛 (𝒙𝒙𝑘𝑘−𝑛𝑛𝑛𝑛), represented by a red “x” in  Figure 2.2, and the past disturbances 𝒗𝒗𝑘𝑘−𝑖𝑖, 𝑖𝑖 = 1, … ,𝑛𝑛𝑝𝑝, represented by yellow lines in  Figure 2.2. The MHE assumes that if 𝒖𝒖𝑘𝑘−𝑖𝑖 and 𝒗𝒗𝑘𝑘−𝑖𝑖 were applied to the model (2.11) and (2.12) starting from 𝒙𝒙𝑘𝑘−𝑛𝑛𝑛𝑛, then the corresponding model output at sampling times 𝑘𝑘 − 𝑖𝑖,  𝑖𝑖 = 0, … ,𝑛𝑛𝑝𝑝 − 1, i.e.,  𝒚𝒚𝑘𝑘−𝑖𝑖, must  36  be as close as possible to 𝒚𝒚𝑃𝑃,𝑘𝑘−𝑖𝑖. This aim corresponds to the first term in the cost function (2.10), which also incorporates two additional terms: the last one minimizes the magnitude of the estimated disturbances 𝒗𝒗𝑘𝑘−𝑖𝑖, while the second one is a prior weighting that penalizes the distance of the decision variable 𝒙𝒙𝑘𝑘−𝑛𝑛𝑛𝑛 , with respect to the one that was previously estimated at sampling time 𝑘𝑘 − 𝑛𝑛𝑝𝑝 (𝒙𝒙�𝑘𝑘−𝑛𝑛𝑛𝑛), as in (2.17). 𝑸𝑸𝒙𝒙 , 𝑸𝑸𝒗𝒗, and 𝑸𝑸𝒚𝒚 are positive definite matrices, with weighting and normalization factors. The problem also includes inequality constraints to bind the disturbances in the allowed range (2.15), as well as others (2.13) to avoid unwanted values of the variables. The solution of problem (2.10)-(2.17) gives 𝒙𝒙𝑘𝑘−𝑛𝑛𝑛𝑛∗  and 𝒗𝒗𝑘𝑘−𝑖𝑖∗ , 𝑖𝑖 = 1 …𝑛𝑛𝑝𝑝 . This implies that once problem (2.10)-(2.17) has been solved, its solution can be used to estimate the initial value of the model state at time 𝑡𝑡𝑘𝑘, i.e., 𝒙𝒙�𝑘𝑘, which is required by the eMPC+MA problem in (2.9). To obtain 𝒙𝒙�𝑘𝑘 the model equations (2.18) must be integrated over 𝑡𝑡 ∈ �𝑡𝑡𝑘𝑘−𝑛𝑛𝑛𝑛 , 𝑡𝑡𝑘𝑘�  starting from 𝒙𝒙𝑘𝑘−𝑛𝑛𝑛𝑛∗ , using the estimated disturbances 𝒗𝒗𝑘𝑘−𝑖𝑖∗ ,  𝑖𝑖 =1, … , 𝑛𝑛𝑝𝑝, and applying 𝒖𝒖𝑘𝑘−𝑖𝑖.  𝒇𝒇(?̇?𝒙,𝒙𝒙,𝒖𝒖,𝒗𝒗∗) = 0 , ∀𝑡𝑡 ∈ �𝑡𝑡𝑘𝑘−𝑛𝑛𝑛𝑛 , 𝑡𝑡𝑘𝑘� , 𝒙𝒙�𝑡𝑡𝑘𝑘−𝑛𝑛𝑛𝑛� = 𝒙𝒙𝑘𝑘−𝑛𝑛𝑛𝑛∗  (2.18)  Once (2.18) has been solved, the states calculated at time 𝑡𝑡𝑘𝑘 are defined as the initial value for problem (2.1)-(2.9) as it is stated in (2.19). Note that is (2.9) is similar to equation (2.19), the difference being the order of assignment.  𝒙𝒙�𝑘𝑘 = 𝒙𝒙(𝑡𝑡𝑘𝑘) (2.19)   The value of the disturbances 𝒗𝒗𝑘𝑘 required in the eMPC+MA problem (2.1)-(2.9), is taken as the estimation given by the MHE at the last sampling period 𝒗𝒗𝑘𝑘−1∗ , this is 𝒗𝒗𝑘𝑘 =𝒗𝒗𝑘𝑘−1∗ .   2.3 MA modifiers estimation using transient measurements  When proposing a method for on-line estimation of process derivatives, the overall performance of the algorithms must be taken into account. Accurate estimation of the static process gradients, which requires collecting information about the process in this state, allows precise detection of the true optimum of the process. However, the time  37  spent in the estimation is an important issue, since it affects the time of operation in suboptimal conditions. It may even make the implementation of MA impractical for processes with long settling times when process gradients are estimated with steady-state data. Then, the use of transient measurements seems to be an interesting alternative to reduce the convergence time for all the RTO+MA+MPC approaches already mentioned in Section 1.6. The MA modifiers estimation module in Figure 2.1 is responsible to calculate the MA modifiers to be used in the controller.  In this thesis, two different algorithms have been developed. The first one is the Dynamic Modifier Estimation (DME) and the second one is the Transient MA (TMA). This module will have different steps depending on the algorithm chosen:  1. Choose between the process gradient estimation (TMA) or modifier estimation (DME). 2. If the TMA is selected:  a. Estimate the process gradient using TMA algorithm b. Calculate the model gradient using the finite difference method c. Calculate the modifiers as in (1.8) and (1.9) 3. If DME is used a. Calculate the modifiers using the DME algorithm 4. Calculate the zero order modifiers as in (1.10) 5. Apply the filter as in (1.12)  In the next chapters 3 and 4, the DME and TMA methods are explained in detail with the results of the application to the Williams-Otto Reactor case study. In a few words, DME uses an on-line optimization algorithm to make the estimated modifiers converge to the steady-state modifiers required by MA. TMA estimates directly the dynamic gradients using the available transient measurements and an identification algorithm and makes small corrections to improve the process performance. Neither method requires an input-output process model to compute the process gradients or modifiers from transient data. Table 2.1 shows the main features of the two algorithms.    38  Table 2.1: Main features of the proposed algorithms.  Dynamic Modifier Estimation Transient MA Type of data Transient measurements Transient measurements Type of problem Optimization problem Identification Algorithm Result of the problem Estimation of MA modifiers Estimation of dynamic process gradients                            39  3 Dynamic Modifier Estimation (DME)  This chapter presents an algorithm to estimate the MA modifiers during the transient, called Dynamic Modifier Estimation (DME). DME is used in the eMPC+MA architecture presented earlier and is applied to a benchmark example, the Williams-Otto reactor.  3.1 DME algorithm  DME has the task of computing the modifiers 𝝀𝝀𝑘𝑘 ,𝜸𝜸𝑘𝑘  used in the eMPC+MA module (Figure 2.1), while 𝜺𝜺𝑘𝑘 can be directly computed from (1.10). From their definitions in (1.8) and (1.9), several approaches have been proposed in the literature to compute modifiers based on the estimation of the process gradients from available measurements. As mentioned above, the use of transient measurements to estimate modifiers opens the door to the application of MA in slow dynamic processes. Win this sense, the MA modifiers could be seen as correction terms that are added to the economic optimization problem so that the modified problem solution matches the process optimum. From this point of view, they can be estimated directly without explicitly computing process and model gradients. DME will try to estimate the modifiers directly using historical data, which, after filtering, will be incorporated into the eMPC+MA module. The idea behind the DME approach is explained next, considering only the economic cost function in a continuous form for simplicity. Consider a vector 𝜽𝜽 such that, if given an appropriate value, the modified cost function appearing in equation (3.1) reproduces the measured process cost function 𝜙𝜙𝑝𝑝  over th