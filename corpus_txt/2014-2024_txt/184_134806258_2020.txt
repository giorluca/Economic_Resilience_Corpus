Estimation technique for offset-free economic MPC based on modifier adaptation

Estimation technique for offset-free economic MPCbased on modifier adaptationMarco Vaccari ∗ Federico Pelagagge ∗ Dominique Bonvin ∗∗Gabriele Pannocchia ∗,∗∗∗∗University of Pisa, Department of Civil and Industrial Engineering, LargoLazzarino 2, 56126 Pisa (Italy)∗∗Laboratoire d’Automatique, EPFL, CH-1015, Lausanne, Switzerland∗∗∗Corresponding author: gabriele.pannocchia@unipi.itAbstract: Economic model predictive control formulations that combine online optimizing controlwith offset-free methodologies such as modifier adaptation have been proposed recently. These newalgorithms are able to achieve asymptotic optimal performance despite the presence of plant-modelmismatch. However, there is a major requirement stemming from the modifier-adaptation part, namely,the necessity to know the static plant gradients at the sought (and therefore still unknown) steady-stateoperating point. Hence, for implementation purposes, the algorithms need to be enhanced with plantgradient estimation techniques. This work proposes to estimate modifiers directly, based on steady-stateperturbations and using Broyden’s approximation. The proposed economic MPC algorithm has beentested in simulation on the Williams-Otto reactor and provides plant optimality upon convergence.Keywords: Economic model predictive control; Real-time optimization; Modifier adaptation; Gradientestimation; Broyden’s method.1. INTRODUCTIONIn the last decade, economic MPC (eMPC) has become one ofthe most studied solution method to overcome the hierarchicalseparation between economic optimization and control in theprocess industries (Rawlings et al., 2012; Ellis and Christofides,2014). However, as with model predictive control (MPC) andmodel-based real-time optimization (RTO), eMPC typicallydoes not converge to plant optimality in the presence of plant-model mismatch. In order to deal with this problem, noveloffset-free eMPC (OF-eMPC) algorithms have been proposedin the literature (Vaccari and Pannocchia, 2016; Pannocchia,2018; Faulwasser and Pannocchia, 2019), by merging offset-free tracking MPC (Pannocchia, 2015) with modifier adaptation(MA) (Marchetti et al., 2009). The purpose of these formula-tions is to enforce that the steady state reached by the closed-loop system corresponds to the best equilibrium point for theplant. These algorithms rely on the demonstrated MA featurethat first-order modifier terms can guarantee meeting the neces-sary conditions of optimality of the unknown plant (Marchettiet al., 2009). A particular version of MA that puts modifierson the outputs, labeled “output MA” (MAy), is used in thisstudy (Papasavvas et al., 2019). The major drawback of bothMA and MAy is the requirement of plant gradients at steady-state conditions. This is not a trivial task, and much workin the literature has dealt with gradient estimation (see e.g.Costello et al. (2016); François and Bonvin (2013); Marchettiet al. (2016) and references therein). A recent implementationof OF-eMPC with gradient estimation is described in (Vaccariand Pannocchia, 2018). The authors detail a new method basedon system identification to compute a gradient approximationto be used in MAy or other offset-free structures. Althoughthe results are quite promising, one should keep in mind thatsystem identification requires sufficient system excitation andalso the ability to process noisy measurements. For this reason,an important contribution of the present work concerns a wayof estimating first-order modifiers directly from measurementsusing a Broyden’s update that relies on past operating pointsrather than local perturbations.The paper is organized as follows. The problem definition andan OF-eMPC algorithm available in the literature are detailedin Section 2. The proposed gradient estimation technique ispresented in Section 3. The resulting OF-eMPC algorithm istested on a simulated example in Section 4. Finally, conclusionsare presented in Section 5.2. PROBLEM DEFINITION2.1 Plant and cost specificationsDiscrete-time nonlinear dynamic systems are the object of thecurrent study:x+p = fp(xp,u)yp = hp(xp)(1)where xp ∈ Rnxp , u ∈ Rnu and yp ∈ Rny are the plant states,inputs and outputs, respectively, x+p are the successor states.At each time k ∈ Z, the plant outputs yp are measured anddenoted by yp,k. We assume differentiability of the functionsfp : Rnxp ×Rnu → Rnxp and hp : Rnxp → Rny .Input and output bounds must be fulfilled at all times:umin ≤ u≤ umax, ymin ≤ y≤ ymax (2)where umin,umax,ymin and ymax are the corresponding bounds.The economically optimal steady state of Plant (1) is defined bysolving the following problem:(x̄?p, ū?, ȳ?p) = argminx,u,y `e(y,u) (3a)subject tox = fp(x,u) (3b)y = hp(x) (3c)umin ≤ u≤ umax (3d)ymin ≤ y≤ ymax (3e)where `e : Rny×Rnu →R is the cost function and (x̄?p, ū?, ȳ?p) isthe optimal equilibrium point of Plant (1).Assumption 1. The cost function `e(y,u) is continuously differ-entiable.It is important to underline that, even if Problem (3) is assumedto be feasible and its solution unique, (x̄?p, ū?, ȳ?p) is unknowndue to plant-model mismatch as discussed next.2.2 Model and augmented modelIn order to design an eMPC algorithm, the following nominalprocess model is used:x+ = f (x,u)y = h(x) (4)where x and x+ ∈ Rnx denote the current and successor states.The functions f : Rnx ×Rnu → Rnx and h : Rnx → Rny , whichare assumed to be differentiable, differ from their plant coun-terparts fp and hp due to plant model-mismatch.The general form of a (linearly) augmented model for offset-free tracking MPC algorithms is (Pannocchia et al., 2015):x+ = F(x,u,d) = f (x,u)+Bddd+ = dy = H(x,d) = h(x)+Cdd(5)where d ∈ Rnd are the so-called disturbances, Bd ∈ Rnx×nd andCd ∈Rny×nd are matrices used to model the disturbance effects.The functions F : Rnx×Rnu×Rnd →Rnx and H : Rnx×Rnd →Rny are assumed to be continuous. The following assumptionregarding system observability is imposed on the (nx + nd)augmented states (Pannocchia et al., 2015).Assumption 2. The augmented system (5) is observable.It has to be noted that Assumption 2 imply the observability ofthe nominal model (4) (Pannocchia et al., 2015, Remark 8).2.3 State and disturbance estimationLet x̂∗k−1 and d̂∗k−1 denote the estimates of xk−1 and dk−1 ob-tained using the output measurements at time k− 1. Further-more, x̂k, d̂k and ŷk, are the predicted values of xk,dk and ykobtained at time k using the augmented model (5) and the bestavailable values of the states, inputs and disturbances at timek−1, that is:x̂k = F(x̂∗k−1,uk−1, d̂∗k−1)d̂k = d̂∗k−1ŷk = H(x̂k, d̂k)(6)Hence, defining the prediction errors at time k as:εk = yp,k− ŷk (7)the filtering relations for the augmented states can be writtenas:x̂∗k = x̂k +Kxεkd̂∗k = d̂k +Kdεk(8)where the matrices Kx ∈ Rnx×ny and Kd ∈ Rnd×ny are chosen toform an asymptotically stable observer, which requires ny = ndand Kd to be invertible (Pannocchia et al., 2015).2.4 Computation of modifiersWe will use the concept of output modifiers that is borrowedfrom the RTO literature (Marchetti et al., 2009; Papasavvaset al., 2019). In this study, these modifiers express the differ-ences between the plant and model outputs at steady state. LetΛk ∈ Rny×nu be the modifier matrix at time k. This matrix, ini-tialized as Λ0 = 0, is updated at each decision time as follows:Λk = (1−σ)Λk−1 +σ (Dugp (ūk−1)−Dug(ūk−1)) (9)where σ is a scalar first-order filter constant ∈ (0,1], gp :Rnu→Rny and g : Rnu → Rny are the plant and model steady-stateinput-to-output maps, calculated for Plant (1) and Model (4)or (5), respectively 1 . The operator Du(·) represents the deriva-tive of the considered function with respect to the variable u,and ūk−1 the input steady-state targets computed at the previousiteration and available at iteration k (see next subsection).2.5 Target calculation with modifiersA steady-state target calculation is required at time k to computethe equilibrium triple (xk,uk,yk), considering the current distur-bance estimate d̂∗k . However, because of plant-model mismatch,the outputs are corrected using first-order modifier terms, whichgives the following target problem to be solved at each iteration:(x̄k, ūk, ȳk) = argmin(x,u,y)`e(y,u) (10a)subject to:x = F(x,u, d̂∗k ) (10b)y = H(x, d̂∗k )+Λk (u− ūk−1) (10c)umin ≤ u≤ umax (10d)ymin ≤ y≤ ymax (10e)The modifier terms in Eq. (10c) enforce KKT matching be-tween Problems (3) and (10) (Papasavvas et al., 2019).2.6 Economic MPC with modifiersLet x:={χ0,χ1, . . . ,χN} and u:={ν0,ν1, . . . ,νN−1} denote somegeneric state and input sequences, respectively. Then, a finite-horizon optimal control problem (FHOCP), modified as perEq. (10c), is solved at each decision time k:(x?k ,u?k) = argminx,uN−1∑i=0`e(γi,νi) (11a)subject toχ0 = x̂∗k (11b)χi+1 = F(χi,νi, d̂∗k ) (11c)γi = H(χi, d̂∗k )+Λk(νi− ūk−1) (11d)umin ≤ νi ≤ umax (11e)ymin ≤ γi ≤ ymax (11f)χN = x̄k (11g)As usual in MPC, assuming that Problem (11) is feasible, onlythe first inputs of the optimal sequence u?k are implemented:uk = u?k [1] (12)Remark 3. The modifier terms in Eq. (11d) serve the samepurpose as those in Eq. (10c) and, for consistency with thelatter, ūk−1 and not ūk are used as steady-state input targets.1 Since a linear disturbance model is used, derivatives of Model (4) or (5) withrespect to u are identical.3. GRADIENT ESTIMATIONThe OF-eMPC algorithm in Section 2 requires the knowledgeof the steady-state plant gradients Dugp(·). Since these gradi-ents cannot be measured directly, they must be inferred fromtypically noisy and transient output measurements. Variousmethods have been proposed in the literature (François andBonvin, 2013; Costello et al., 2016; de Avila Ferreira et al.,2017). These approaches can be classified as either steady-state perturbation methods that normally use only steady-state data, or dynamic perturbation methods that use transientdata (Marchetti et al., 2016).3.1 Basic ideaIn this work, we propose a methodology based on steady-state perturbation methods, that is, we use steady-state data forgradient estimation. Since, for any input change, one needs towait for the plant to reach the new steady-state conditions, thesemethods can be particularly slow.Broyden’s update offers a way of estimating gradients fromcurrent and past measurements (Roberts, 2000; Rodger andChachuat, 2011; Marchetti et al., 2016). Although no additionalperturbations are required, the input changes from one iterationto the next must be sufficiently exciting for the scheme towork. The technique is a standard secant method in nonlinearprogramming for updating estimates of first-order derivatives,such as Jacobian matrices (Dennis Jr and Schnabel, 1996).The modifier terms Λk described in Section 2, are updatedat each sampling time using transient data. However, due tothe necessity of the proposed estimation algorithm to oper-ate with steady-state measurements, the system must arrive atquasi-stationary conditions between two successive modifierupdates. Hence, the interval between consecutive modifier up-dates should be at least of the order of the system settling timeτst , which corresponds to have a time-scale separation betweenthe control and gradient-estimation tasks. That is, modifier up-date is provided every M sampling times of the eMPC scheme,where M ∼ τstτis a tuning parameter and τ is the eMPC sam-pling time. Dedicated input perturbations can be performed toinitialize the proposed scheme with a non-zero Λ0 as a way tospeed up convergence. These perturbations are required in orderto collect (nu +1) quasi-stationary output measurements.3.2 Broyden’s method for modifier estimationWe propose to update the modifier matrix every M iterationsby computing the differences between the plant and modelgradients. For this, let us define:δgk:=Dugp,k−Dugk (13a)∆Uk:=uk−1−uk−M−1 (13b)δyk:=yp,k−h(x̂k) (13c)∆Ek:=δyk−δyk−M (13d)where Dugp,k and Dugk are the estimates available at iterationk of Dugp(ūk−1) and Dug(ūk−1). One can update the gradientdifferences using Broyden’s formula as:∆gk = ∆gk−M +∆Ek−∆gk−M∆Uk∆UTk ∆Uk∆UTk (14)Finally, the modifier matrix is updated as follows:Λk ={Λk−1 if mod (k− kin,M) 6= 0 (15a)(1−σ)Λk−1 +σ∆gk if mod (k− kin,M) = 0 (15b)where kin is the time at which the initialization starts (this isdetailed in the next section). It should be noted that, whenapplying Eq. (14), care must be taken to avoid ill-conditioningwhen ∆Uk→ 0. Hence, the step given by Eq. (14) is performedonly if ‖∆Uk‖ ≥ ρu, where ρu is a chosen threshold.Remark 4. One could consider a different approach, in whichthe estimates Dugp,k of the plant gradients are obtained viaBroyden’s method, while the exact model gradients Dug(ūk−1)are used. However, experience has shown that the direct es-timation of modifiers is often preferred over the estimationof the individual gradients since the plant and the model areapproximated using the same numerical scheme. A graphicalexplanation can be derived similarly to the one in (Marchettiet al., 2016, Figure 3) made for linear interpolation.Remark 5. The driving term ∆Ek of the Broyden update (14) isdefined in Eq. (13d) using the errors between the plant outputsand the nominal model outputs as defined in Eq. (13c) instead ofthe prediction errors εk defined in Eq. (7) using the augmentedmodel. Note that using ∆Ek = εk− εk−M = (yp,k−H(x̂k, d̂k))−(yp,k−M −H(x̂k−M, d̂k−M)) to update ∆gk−M in Eq. (14) wouldnot work. The tacit secant equation that is behind the Broydenupdate, that is εk− εk−M = ∆gk∆Uk, does not hold true becaused̂k 6= d̂k−M . In fact, whenever the system reaches an equilibrium(constant inputs and outputs), it follows that the predictionerrors εk in Eq. (7) go to zero due the use of the augmentedModel (5) (Pannocchia et al., 2015). Hence, since steady-stateconditions are supposed to be reached after M iterations, thiswould give εk− εk−M ≈ 0 and ∆gk−M would not be updated.3.3 Algorithm initializationTo increase convergence speed, the scheme needs a good initialvalue for Λ, that is, a good initial value for ∆g. A simpleapproach for this consists in perturbing each input individuallyaround the current operating point to get an estimate of the cor-responding gradient elements. Hence, this approach requires nuinput perturbations to be carried out and, for each perturbation,we must wait for steady state, that is, for M sampling times.To implement this initialization, the closed-loop system isbrought to steady state, reached at time kin with the inputs ukin .Then, for j = 1, · · · ,nu, the following control law is used:uk = ukin + s je j if ( j−1)M ≤ k− kin < jM (16)where s j is the amplitude of a step of duration M in thedirection e j, with e j a unit vector in input space. Hence, the terms je j perturbs the jth component of ukin individually during Miterations. The jth column of the estimated gradient differencescan be computed as:∆gkin+Nin, j =(yp,kin+ jM− yp,kin)− (h(x̂kin+ jM)−h(x̂kin))s j(17)which is used to compute Λkin+Nin in Eq. (9).3.4 Summary of the algorithmTo detail the new algorithm, a block diagram and an algorithmare presented in Figure 1 and Algorithm 1, respectively. As canbe seen in Figure 1, the gradient difference estimation is mod-ified only after Nin +M iterations. According to Algorithm 1,the modifier matrix is updated every M time steps, but onlywhen the difference between two successive inputs is not tooclose to zero. This is needed to avoid calculating a gradientFHOCP (11,12) k→ k−1ukPlantyp,kuk−1Predictionmodule (6)uk−1Filteringmodule (7,8)x̂k, d̂k, ŷkkin ≤ k < kin +Ninx̂∗k , d̂∗kAugmentedstateestimatork ≥ kin + Nin∧mod (k− kin,M) = 0NOInput excitation (16)YESukk = kin +NinYES‖∆Uk‖ ≥ ρuGradient differenceestimation (14)NOYESNOΛk = Λk−1Modifierupdate (15b)∆gkGradient differenceInitialization (17)∆gkYESTargetoptimizationproblem (10)x̄k, ūkΛkNOΛk = Λk−1Fig. 1. Block diagram for the eMPC algorithm described inSections 2 and 3.difference based on not enough informative data, that is, avoidill-conditioning of Eq. (14). Hence, the value of the parameterρu can be seen also as a tuning parameter for the performanceof the gradient estimation method.4. CASE STUDY: WILLIAMS-OTTO REACTORThis section presents a case study to validate the proposedgradient-estimation methodology. The output disturbance modelis used, that is, Bd = 0, Cd = I, and the estimator is a deadbeatKalman filter with Kx = 0, Kd = I.The controllers studied are as follows:• eMPC0 is the economic MPC that uses only the outputdisturbance model.• eMPC1 is the offset-free economic MPC defined in Sec-tion 2 with plant gradients assumed known;• eMPC2 uses the gradient differences approximation de-scribed in Section 3.2.Moreover, the filter constant for updating the modifiers inEq. (9) is σ = 0.5, while, unless differently specified, thenumber of iterations between two consecutive modifier updatesis M = 15.Process. The Williams-Otto reactor is a well-known pro-cess control example that is often used as a benchmark forRTO (Williams and Otto, 1960; Marchetti et al., 2016). It con-Algorithm 1 Offset-free eMPC algorithm1: Initialize u0, x̂∗0, d̂∗0 and Λ0; set k = 1.2: Input: uk−1, x̂∗k−1, d̂∗k−1 and Λk−1.3: Read yp,k from the plant.4: Predict successor quantities using (6).5: Evaluate prediction errors using (7).6: Evaluate state and disturbance estimates using (8).7: if kin ≤ k < kin +Nin then8: Set uk using (16).9: else10: if mod (k− kin,M) = 0 and k ≥ kin +Nin then11: if k = kin +Nin then12: Initialize the gradient differences using (17).13: Update the modifier matrix using (15b).14: else15: Define ∆Uk and ∆Ek as in (13b) and (13d).16: if ‖∆Uk‖ ≥ ρu then17: Evaluate the gradient difference using (14).18: Update the modifier matrix using (15b).19: else20: Do not update the modifier matrix.21: end if22: end if23: else24: Do not update the modifier matrix.25: end if26: Solve (10) to obtain the targets (x̄k, ūk, ȳk).27: Solve FHOCP (11), set the input uk as in (12).28: end if29: Output: uk, x̂∗k , d̂∗k and Λk.30: Inject the inputs uk into the plant.31: Update time index k := k+1sists of a non-isothermal CSTR, in which the following threereactions take place:A+Bk1−→ C r1 = k1 (Tr)cAcBB+Ck2−→ P+E r2 = k2 (Tr)cBcCC+Pk3−→ G r3 = k3 (Tr)cCcP(18)Species A is fed at the constant flowrate QA with molar concen-tration cA0, while species B is added at the variable flowrate QBwith molar concentration cB0. The desired products are P andE, while C and G are intermediate and undesired products, re-spectively. The reactor temperature Tr is assumed manipulated,thus reflecting an ideal cooling system, while the reactor outletflowrate Qr is set equal to the sum of the two inlet flowrates,that is, Qr = QA+QB. The reactor volume Vr remains constant.Moreover, only the molar concentration of the two desiredproducts are assumed to be measured, that is, yp = [cP cE]T .The kinetic constants follow an Arrhenius-type law,ki (Tr) = ki0 exp(−EiTr +273.15)for i = 1,2,3 (19)The system dynamics are reported in (Faulwasser and Pannoc-chia, 2019). The system is characterized by two inputs, that is,u = [QB Tr]T .The process economics is defined by the following runningcost:`e(·) = QAcA0 pA +QBcB0 pB−QrcP pP−QrcE pE (20)where pA, pB, pP, and pE are the molar prices of reactants andproducts. The plant parameters are given in Table 1.Table 1. William-Otto Reactor: Plant ParametersParameter Value Unitk10 9.9594×106 dm3/(mol ·min)k20 8.66124×109 dm3/(mol ·min)k30 9.9594×106 dm3/(mol ·min)E1 6666.7 KE2 8333.3 KE3 11111 KcA0 10 mol/dm3cB0 10 mol/dm3Vr 2105 dm3QA 112.35 dm3/minpA 7.623 $/kmolpB 11.434 $/kmolpP 114.338 $/kmolpE 5.184 $/kmolTable 2. Williams-Otto Reactor: Model ParametersParameter Value Unitk∗10 1.3134×108 dm6/(mol2 ·min)k∗20 2.586×1013 dm6/(mol2 ·min)E∗1 8077.6 KE∗2 12438.5 KModel. The model used for control design comprises onlytwo reactions:A+2Bk∗1−→ P+E r∗1 = k∗1(Tr)cAc2BA+B+Pk∗2−→ G r∗2 = k∗2 (Tr)cAcBcP(21)for which the kinetic parameters are reported in Table 2. Withthese parameter values, the plant settling time is of the order ofτst = 25 min.Let us underline that the model state vector has five compo-nents, x = [cA cB cP cE cG]T , and differs from the plant statevector that has six components, xp = [cA cB cC cP cE cG]T .The following input constraints should be met at all times:180 dm3/min≤ QB ≤ 360 dm3/min (22)75 °C≤ Tr ≤ 100 °C (23)Optimization results. The sampling time used for control isτ = 2 min, which means that the time between two successivemodifier updates is Mτ = 30 min. The performance of con-trollers eMPC0, eMPC1 and eMPC2 are depicted in Figure 2,together with the optimal equilibrium, which is unknown tothe controllers. The simulation was performed on a PC withCPU Intel i5 7200u. The resulting computational cost requiredfor a single iteration is near 0.15 s, and the time needed forthe update of the modifier matrix is only 1% of that time.Furthermore, since updating is only required every M iterations,computational cost is not an issue for this problem.eMPC0 is reported for comparison and, as expected, does notconverge to the plant optimum. On the contrary, eMPC1 con-verges to plant optimality and does it very quickly because ofthe availability of perfect gradients. Hence, the real interestingcase is eMPC2. Figure 2 has three distinct time zones thatare separated by two vertical grey lines. In the first part, fromthe beginning to time kinτ = 30 min, with the modifiers equalto zero, eMPC2 reaches a steady state that is not the plantoptimum. In the middle part, from kinτ = 30 to (kin +Nin)τ =90 min, modifier initialization is performed by perturbing thetwo inputs individually, one after the other. Then, the modifiersare updated every Mτ = 30 min, as described in Section 3.2,0 50 100 150 200 250 300280300320340360Input1:QB(dm3 /min)eMPC0eMPC1eMPC2Optimum0 50 100 150 200 250 30078808284868890Input2:T r(°C)eMPC0eMPC1eMPC2Optimum0 50 100 150 200 250 3001.101.151.201.251.301.351.401.45Output1:c E(kmol/m3 )eMPC0eMPC1eMPC2Optimum0 50 100 150 200 250 300Time (min)0.60.70.80.91.01.1Output2:c P(kmol/m3 )eMPC0eMPC1eMPC2OptimumFig. 2. Closed-loop results with eMPC0, eMPC1 and eMPC2:inputs (top) and outputs (bottom). The two grey verticallines delimitate the time interval for modifier initialization.Optimum denotes optimal values.which enforces convergence to plant optimality. Compared toeMPC1, eMPC2 estimates the static gradients but at the cost ofslow convergence. A potential remedy to this slow convergenceis to decrease M.Figure 3 shows the effect of M on the convergence speedof eMPC2. M ≥ 10 allows reaching steady-state conditionsbetween modifier updates, which results in good estimate ofthe static gradients. The time needed for convergence is reducedusing a smaller value of M, however at the price of no longerusing steady-state plant measurements. As a result, the gradientdifferences estimated via Broyden’s update are inaccurate. Thiseffect is clearly visible in Figure 3 for M = 3. The best overallperformance seems to be obtained using M = 5.5. CONCLUSIONSThe two main ingredients of offset-free eMPC are the standardaugmented system structure and the first-order modifiers for theoutputs. This formulation proved to asymptotically convergeto plant optimality despite model uncertainty. A fundamentalrequirement of the proposed scheme is the knowledge of plant0 50 100 150 200 250 300175200225250275300325350Input1:QB(dm3 /min)eMPC2 M=3eMPC2 M=5eMPC2 M=10eMPC2 M=15Optimum0 50 100 150 200 250 30080859095100Input2:T r(°C)eMPC2 M=3eMPC2 M=5eMPC2 M=10eMPC2 M=15Optimum0 50 100 150 200 250 3001.11.21.31.41.5Output1:c E(kmol/m3 )eMPC2 M=3eMPC2 M=5eMPC2 M=10eMPC2 M=15Optimum0 50 100 150 200 250 300Time (min)0.60.70.80.91.01.1Output2:c P(kmol/m3 )eMPC2 M=3eMPC2 M=5eMPC2 M=10eMPC2 M=15OptimumFig. 3. eMPC2 performance with different values of M.gradients at steady state. In this work, a modifier estimationtechnique based on steady-state perturbations and Broyden’sgradient approximation has been proposed and used success-fully.A representative example with plant-model mismatch has beenselected for validating the proposed OF-eMPC implementation.Estimating the modifiers directly appears to be very effective ifsteady-state measurements are used. However, the methodol-ogy was found less efficient with respect to convergence time.For this reason, the time between modifier updates has beenreduced. Results show that, even if the measurements are nottaken at steady state, the closed-loop system is still able to reachplant optimality, and the convergence time can be significantlyreduced.Further studies will focus on the influence of various tuningparameters to possibly enhance the convergence behavior. Fur-thermore, the influence of measurement noise on the gradientestimation will be analyzed. Moreover, convergence conditionsof the algorithm and KKT matching upon convergence, aresome of the properties that need to be investigated and proved.REFERENCESCostello, S., François, G., and Bonvin, D. (2016). A direc-tional modifier-adaptation algorithm for real-time optimiza-tion. Journal of Process Control, 39, 64–76.de Avila Ferreira, T., François, G., Marchetti, A.G., and Bonvin,D. (2017). Use of transient measurements for static real-timeoptimization. IFAC-PapersOnLine, 50(1), 5737–5742.Dennis Jr, J.E. and Schnabel, R.B. (1996). Numerical Methodsfor Unconstrained Optimization and Nonlinear Equations,volume 16. Society for Industrial Applied Mathematics.Ellis, M. and Christofides, P.D. (2014). On finite-time andinfinite-time cost improvement of economic model predictivecontrol for nonlinear systems. Automatica, 50(10), 2561 –2569.Faulwasser, T. and Pannocchia, G. (2019). Towards a unifyingframework blending RTO and economic MPC. Industrial &Engineering Chemistry Research, 58, 13583–13598.François, G. and Bonvin, D. (2013). Use of transient measure-ments for the optimization of steady-state performance viamodifier adaptation. Industrial & Engineering ChemistryResearch, 53(13), 5148–5159.Marchetti, A., François, G., Faulwasser, T., and Bonvin, D.(2016). Modifier adaptation for real-time optimization –Methods and applications. Processes, 4(4), 1–35.Marchetti, A.G., Chachuat, B., and Bonvin, D. (2009).Modifier-adaptation methodology for real-time optimiza-tion. Industrial & Engineering Chemistry Research, 48(13),6022–6033.Pannocchia, G. (2015). Offset-free tracking MPC: A tutorial re-view and comparison of different formulations. In EuropeanControl Conference, 527–532.Pannocchia, G. (2018). An economic MPC formulation withoffset-free asymptotic performance. IFAC-PapersOnLine,51(18), 393–398.Pannocchia, G., Gabiccini, M., and Artoni, A. (2015). Offset-free MPC explained: Novelties, subtleties, and applications.IFAC-PapersOnLine, 48(23), 342–351.Papasavvas, A., de Avila Ferreira, T., Marchetti, A.G., andBonvin, D. (2019). Analysis of output modifier adaptationfor real-time optimization. Computers and Chemical Engi-neering, 121, 285–293.Rawlings, J.B., Angeli, D., and Bates, C.N. (2012). Funda-mentals of economic model predictive control. In 51st IEEEConference on Decision and Control, 3851–3861.Roberts, P.D. (2000). Broyden derivative approximation inISOPE optimising and optimal control algorithms. In 11thIFAC Workshop on Control Applications of Optimisation,283–288. St Petersburg, Russia.Rodger, E.A. and Chachuat, B. (2011). Design methodologyof modifier adaptation for on-line optimization of uncertainprocesses. In IFAC World Congress, 4113–4118. Milano,Italy.Vaccari, M. and Pannocchia, G. (2016). A modifier-adaptationstrategy towards offset-free economic MPC. Processes, 5(1),2.Vaccari, M. and Pannocchia, G. (2018). Implementation of aneconomic MPC with robustly optimal steady-state behavior.IFAC-PapersOnLine, 51(20), 92–97.Williams, T.J. and Otto, R.E. (1960). A generalized chemicalprocessing model for the investigation of computer control.Trans. of the American Institute of Electrical Engineers, PartI: Communication and Electronics, 79(5), 458–473.